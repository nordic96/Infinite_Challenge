[MAIN]
testing = test
path_encodings = encodings/
path_test = test/

[LOG]
logfile_directory = /external/logs/

; parameters required for updating database with results of phase 1 (skull detection) and phase 2 (face rec)
[AWS RDS]
endpoint = database-infc.cu1hhk7e8q1f.ap-southeast-1.rds.amazonaws.com
port = 1433
db_name = Infinite_Challenge
uname = db_user
result_table_name = skull

[Phase1]
; for uploading to drive
upload_unlabelled = False
upload_labelled = True
upload_results = False
; for saving locally
save_images = True
save_results = True
output_directory_path = /external/phase1/out
display = False
video_sample_rate = 1300
; for azure
skull_confidence_threshold = 0.95
skull_model_version = skull-070720

[Phase2]
input_directory_path = /external/phase1/out
output_directory_path = /external/phase2/out
upload_images = True
upload_results = True
save_images = True
save_results = True
; parameters required for running azure face client to detect and identify faces
endpoint = https://challengerecognition.cognitiveservices.azure.com/
person_group_id = infinite-challenge-group

[Phase3]
input_directory_path = /external/phase2/out
output_directory_path = /external/phase3/out
upload_results = True
save_results = True
db_endpoint = database-infc.cu1hhk7e8q1f.ap-southeast-1.rds.amazonaws.com
db_name = Infinite_Challenge
db_tablename = skull
db_username = db_user


[YOLO]
image_num = 128
path_yolov5 = dataset/skull/yolov5
path_test = dataset/skull/test_infer
path_cache = dataset/skull/cache
path_result_cache = dataset/skull/result_cache

; parameters required for running face identification using face_recognition python library
[FACE FR]
known_face_encodings = encodings/encodings_28_Jun_20.pickle
detection_method = cnn
